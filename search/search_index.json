{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python-Grammer \u00b6 Warning \u672c\u30da\u30fc\u30b8\u306f\u73fe\u5728\u4f5c\u6210\u4e2d\u3067\u3059\u3002 \u5b8c\u6210\u307e\u3067\u4eca\u66ab\u304f\u304a\u5f85\u3061\u4e0b\u3055\u3044\u3002 \u6982\u8981 \u00b6 python\u306e\u6587\u6cd5\u3092\u30e1\u30a4\u30f3\u306b\u307e\u3068\u3081\u305f\u30b5\u30a4\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 \u4f5c\u6210\u8005\u304cC/C++\u3092\u30e1\u30a4\u30f3\u3067\u4f7f\u3063\u3066\u3044\u308b\u30ec\u30ac\u30b7\u30fc\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306a\u306e\u3067\u3001python\u306e\u6587\u6cd5\u304cc++\u3067\u8868\u73fe\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u3092\u3001\u5bfe\u6bd4\u3057\u3066\u8a18\u8f09\u3059\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002 python\u306e\u5b9f\u884c\u74b0\u5883 \u00b6 \u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5 google\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bColaboratory\u3092\u4f7f\u3046\u306e\u304c\u4fbf\u5229\u3067\u3059\u3002 \u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u3067\u624b\u9806\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044 https://tracpath.com/works/development/google-colaboratory/ \u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5 coming soon...","title":"Python-Grammer"},{"location":"#python-grammer","text":"Warning \u672c\u30da\u30fc\u30b8\u306f\u73fe\u5728\u4f5c\u6210\u4e2d\u3067\u3059\u3002 \u5b8c\u6210\u307e\u3067\u4eca\u66ab\u304f\u304a\u5f85\u3061\u4e0b\u3055\u3044\u3002","title":"Python-Grammer"},{"location":"#_1","text":"python\u306e\u6587\u6cd5\u3092\u30e1\u30a4\u30f3\u306b\u307e\u3068\u3081\u305f\u30b5\u30a4\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 \u4f5c\u6210\u8005\u304cC/C++\u3092\u30e1\u30a4\u30f3\u3067\u4f7f\u3063\u3066\u3044\u308b\u30ec\u30ac\u30b7\u30fc\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306a\u306e\u3067\u3001python\u306e\u6587\u6cd5\u304cc++\u3067\u8868\u73fe\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u3092\u3001\u5bfe\u6bd4\u3057\u3066\u8a18\u8f09\u3059\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u6982\u8981"},{"location":"#python","text":"\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5 google\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bColaboratory\u3092\u4f7f\u3046\u306e\u304c\u4fbf\u5229\u3067\u3059\u3002 \u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u3067\u624b\u9806\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044 https://tracpath.com/works/development/google-colaboratory/ \u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5 coming soon...","title":"python\u306e\u5b9f\u884c\u74b0\u5883"},{"location":"00_print%E6%96%87/","text":"\u6a19\u6e96\u51fa\u529b \u00b6 \u56fa\u5b9a\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 \u00b6 \u56fa\u5b9a\u6587\u5b57\u5217\u3084\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u306b\u306fprint\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 python >> print ( \"Hello World\" ) Hello World # \u6570\u5024\u3067\u3082\u8868\u793a\u51fa\u6765\u308b >> print ( 123 ) 123 c++ #include <iostream> // \u6539\u884c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u6700\u5f8c\u306bstd::cout\u304c\u5fc5\u8981 std :: cout << \"Hello world\" << std :: endl ; std :: cout << 123 << std :: endl ; \u5909\u6570\u3092\u8868\u793a\u3059\u308b\u5834\u5408 \u00b6 python \u6587\u5b57\u5217(str)\u578b\u306e\u5909\u6570\u306e\u5834\u5408 >> str = \"Hello World\" >> print ( str ) Hello World \u6570\u5024(int)\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 >> num = 123 >> print ( num ) 123 bool\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 >> valid = False >> print ( valid ) False c++ \u6587\u5b57\u5217(str)\u578b\u306e\u5909\u6570\u306e\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: string str = \"Hello World\" ; std :: cout << str << std :: endl ; \u6570\u5024(int)\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 int num = 123 ; std :: cout << num << std :: endl ; bool\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 bool valid = false ; std :: cout << valid << std :: endl ; \u8907\u6570\u306e\u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u5408 \u00b6 \u4ee5\u4e0b\u306e\uff13\u3064\u3042\u308b \u7a2e\u985e \u8a18\u8ff0\u65b9\u6cd5 python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb (f-string) f\"{\u5909\u6570\u540d}\" Python3.6\u4ee5\u964d format\u95a2\u6570 \"{0}\".format(\u5909\u6570\u540d) Python 2.6\u4ee5\u964d %\u8a18\u6cd5 \"%d\" % (\u5909\u6570\u540d) \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb(f-string)\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408 \u00b6 python \u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306b {\u5909\u6570\u540d} \u3092\u8a18\u8f09\u3059\u308b\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u308b >> str = \"Hello World\" >> num = 12 >> print ( f \" { str } { num } \" ) Hello World 12 c++ #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: string str = \"Hello\" ; int num = 12 ; std :: cout << str << num << std :: endl ; format\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408 \u00b6 \u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306b {} \u306e\u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a18\u8f09\u3057\u3066\u3001\u5f8c\u308d\u306bformat\u95a2\u6570\u3067\u5909\u6570\u3092\u8a18\u8f09\u3059\u308b\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u308b \u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u90e8\u5206\u306b\u306f{str}\u7b49\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u5165\u308c\u305f\u65b9\u304cformat\u95a2\u6570\u5074\u3067\u3082\u5bfe\u5fdc\u4ed8\u3051\u304c\u3055\u308c\u3066\u898b\u3084\u3059\u3044 >> str = \"Hellor World\" >> num = 123 >> print ( \" {} {} \" . format ( str , num )) Hellor World 123 >> str = \"Hellor World\" >> num = 123 >> print ( \" {string} {number} \" . format ( string = str , number = num )) Hellor World 123 %\u8a18\u6cd5\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408 \u00b6 ```python >> str=\"Hellor World\" >> num=123 >> print(\"%s %d\" % (str, num)) Hellor World 123 ``` \u203b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u6570\u540d\u3068%\u306e\u578b\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b ```python >> str=\"Hellor World\" >> num=123 >> print(\"%d %s\" % (str, num)) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: %d format: a number is required, not str ``` \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb(f-string)\u30fbformat\u8a18\u6cd5\u306e\u8272\u3005\u306a\u4f7f\u3044\u65b9 \u00b6 \u6570\u5024\u578b\u306e\u5909\u6570\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3001 {} \u306e\u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u66f8\u5f0f\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u66f8\u5f0f \u5185\u5bb9 \u4f8b (num\u5909\u6570\u306b\u306f123456\u304c\u8a2d\u5b9a\u3057\u3066\u3044\u308b) \u7d50\u679c b 2\u9032\u6570\u3067\u8868\u793a f\"{num}:b}\" 11110001001000000 d 10\u9032\u6570\u3067\u8868\u793a f\"{num:d}\" 123456 x 16\u9032\u6570(\u5c0f\u6587\u5b57)\u3067\u8868\u793a f\"{num:x}\" 1e240 x 16\u9032\u6570(\u5927\u6587\u5b57)\u3067\u8868\u793a f\"{num:X}\" 1e240 \u8868\u793a\u5e45\u6307\u5b9a \u8868\u793a\u5e45\u6307\u5b9a f\"{num:8d}\" \u3000123456 \u30d1\u30c7\u30a3\u30f3\u30b0\u6587\u5b57+\u8868\u793a\u5e45\u6307\u5b9a \u30d1\u30c7\u30a3\u30f3\u30b0\u6587\u5b57\u3068\u8868\u793a\u5e45\u6307\u5b9a f\"{num:08d}\" 00123456 < \u5de6\u5bc4\u305b f\"{num:<8d}\" 123456 > \u5de6\u5bc4\u305b f\"{num:>8d}\" \u3000123456 , \uff13\u6841\u6bce \u306e\u533a\u5207\u308a\u6587\u5b57 {num:,}\" 123,456 \u3082\u3046\u5c11\u3057\u8a73\u7d30\u306a\u6307\u5b9a\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3067\u7e8f\u3081\u3089\u308c\u305f\u5185\u5bb9\u304c\u51c4\u304f\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002 https://hibiki-press.tech/python/format/1015","title":"\u6a19\u6e96\u51fa\u529b"},{"location":"00_print%E6%96%87/#_1","text":"","title":"\u6a19\u6e96\u51fa\u529b"},{"location":"00_print%E6%96%87/#_2","text":"\u56fa\u5b9a\u6587\u5b57\u5217\u3084\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u306b\u306fprint\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 python >> print ( \"Hello World\" ) Hello World # \u6570\u5024\u3067\u3082\u8868\u793a\u51fa\u6765\u308b >> print ( 123 ) 123 c++ #include <iostream> // \u6539\u884c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u6700\u5f8c\u306bstd::cout\u304c\u5fc5\u8981 std :: cout << \"Hello world\" << std :: endl ; std :: cout << 123 << std :: endl ;","title":"\u56fa\u5b9a\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u5834\u5408"},{"location":"00_print%E6%96%87/#_3","text":"python \u6587\u5b57\u5217(str)\u578b\u306e\u5909\u6570\u306e\u5834\u5408 >> str = \"Hello World\" >> print ( str ) Hello World \u6570\u5024(int)\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 >> num = 123 >> print ( num ) 123 bool\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 >> valid = False >> print ( valid ) False c++ \u6587\u5b57\u5217(str)\u578b\u306e\u5909\u6570\u306e\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: string str = \"Hello World\" ; std :: cout << str << std :: endl ; \u6570\u5024(int)\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 int num = 123 ; std :: cout << num << std :: endl ; bool\u578b\u306e\u5909\u6570\u3092\u51fa\u529b\u3059\u308b\u5834\u5408 #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 bool valid = false ; std :: cout << valid << std :: endl ;","title":"\u5909\u6570\u3092\u8868\u793a\u3059\u308b\u5834\u5408"},{"location":"00_print%E6%96%87/#_4","text":"\u4ee5\u4e0b\u306e\uff13\u3064\u3042\u308b \u7a2e\u985e \u8a18\u8ff0\u65b9\u6cd5 python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3 \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb (f-string) f\"{\u5909\u6570\u540d}\" Python3.6\u4ee5\u964d format\u95a2\u6570 \"{0}\".format(\u5909\u6570\u540d) Python 2.6\u4ee5\u964d %\u8a18\u6cd5 \"%d\" % (\u5909\u6570\u540d)","title":"\u8907\u6570\u306e\u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u5408"},{"location":"00_print%E6%96%87/#f-string","text":"python \u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306b {\u5909\u6570\u540d} \u3092\u8a18\u8f09\u3059\u308b\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u308b >> str = \"Hello World\" >> num = 12 >> print ( f \" { str } { num } \" ) Hello World 12 c++ #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: string str = \"Hello\" ; int num = 12 ; std :: cout << str << num << std :: endl ;","title":"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb(f-string)\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408"},{"location":"00_print%E6%96%87/#format","text":"\u5909\u6570\u3092\u8868\u793a\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306b {} \u306e\u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a18\u8f09\u3057\u3066\u3001\u5f8c\u308d\u306bformat\u95a2\u6570\u3067\u5909\u6570\u3092\u8a18\u8f09\u3059\u308b\u3068\u8868\u793a\u3057\u3066\u304f\u308c\u308b \u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u90e8\u5206\u306b\u306f{str}\u7b49\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u5165\u308c\u305f\u65b9\u304cformat\u95a2\u6570\u5074\u3067\u3082\u5bfe\u5fdc\u4ed8\u3051\u304c\u3055\u308c\u3066\u898b\u3084\u3059\u3044 >> str = \"Hellor World\" >> num = 123 >> print ( \" {} {} \" . format ( str , num )) Hellor World 123 >> str = \"Hellor World\" >> num = 123 >> print ( \" {string} {number} \" . format ( string = str , number = num )) Hellor World 123","title":"format\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408"},{"location":"00_print%E6%96%87/#_5","text":"```python >> str=\"Hellor World\" >> num=123 >> print(\"%s %d\" % (str, num)) Hellor World 123 ``` \u203b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u6570\u540d\u3068%\u306e\u578b\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b ```python >> str=\"Hellor World\" >> num=123 >> print(\"%d %s\" % (str, num)) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> TypeError: %d format: a number is required, not str ```","title":"%\u8a18\u6cd5\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408"},{"location":"00_print%E6%96%87/#f-stringformat","text":"\u6570\u5024\u578b\u306e\u5909\u6570\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3001 {} \u306e\u7f6e\u63db\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u66f8\u5f0f\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u66f8\u5f0f \u5185\u5bb9 \u4f8b (num\u5909\u6570\u306b\u306f123456\u304c\u8a2d\u5b9a\u3057\u3066\u3044\u308b) \u7d50\u679c b 2\u9032\u6570\u3067\u8868\u793a f\"{num}:b}\" 11110001001000000 d 10\u9032\u6570\u3067\u8868\u793a f\"{num:d}\" 123456 x 16\u9032\u6570(\u5c0f\u6587\u5b57)\u3067\u8868\u793a f\"{num:x}\" 1e240 x 16\u9032\u6570(\u5927\u6587\u5b57)\u3067\u8868\u793a f\"{num:X}\" 1e240 \u8868\u793a\u5e45\u6307\u5b9a \u8868\u793a\u5e45\u6307\u5b9a f\"{num:8d}\" \u3000123456 \u30d1\u30c7\u30a3\u30f3\u30b0\u6587\u5b57+\u8868\u793a\u5e45\u6307\u5b9a \u30d1\u30c7\u30a3\u30f3\u30b0\u6587\u5b57\u3068\u8868\u793a\u5e45\u6307\u5b9a f\"{num:08d}\" 00123456 < \u5de6\u5bc4\u305b f\"{num:<8d}\" 123456 > \u5de6\u5bc4\u305b f\"{num:>8d}\" \u3000123456 , \uff13\u6841\u6bce \u306e\u533a\u5207\u308a\u6587\u5b57 {num:,}\" 123,456 \u3082\u3046\u5c11\u3057\u8a73\u7d30\u306a\u6307\u5b9a\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u3001\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3067\u7e8f\u3081\u3089\u308c\u305f\u5185\u5bb9\u304c\u51c4\u304f\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002 https://hibiki-press.tech/python/format/1015","title":"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb(f-string)\u30fbformat\u8a18\u6cd5\u306e\u8272\u3005\u306a\u4f7f\u3044\u65b9"},{"location":"01_calcurate_entry/","text":"\u56db\u5247\u6f14\u7b97 \u00b6 \u8db3\u3057\u7b97(addition) \u00b6 >> 3 + 2 5 \u5f15\u304d\u7b97(subtraction) \u00b6 >> 3 - 2 1 \u639b\u3051\u7b97(multiplication) \u00b6 >> 3 * 2 6 \u5272\u308a\u7b97(division) \u00b6 \u4ed6\u306e\u8a00\u8a9e\u3068\u7570\u306a\u308a\u3001python\u3067\u306f / \u3092\u4f7f\u7528\u3059\u308b\u5272\u308a\u7b97\u3067\u306f\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u307e\u3067\u8a08\u7b97\u3055\u308c\u308b \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3082\u542b\u3081\u3066\u8a08\u7b97\u3059\u308b\u5834\u5408\u306b\u306f // \u3092\u4f7f\u7528\u3059\u308b \u5c0f\u6570\u70b9\u3092\u5207\u308a\u6368\u3066\u305b\u305a\u306b\u8a08\u7b97\u3059\u308b python >> 5 / 2 2.5 c++ C++\u3067\u306f\u6574\u6570\u578b\u306e\u5272\u308a\u7b97\u3092\u3059\u308b\u3068\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306f\u5207\u308a\u6368\u3066\u3089\u308c\u308b\u305f\u3081\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306b\u5909\u63db\u3057\u3066\u8a08\u7b97\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: cout << static_cast < float > ( 5 ) / static_cast < float > ( 2 ) << std :: endl ; \u5c0f\u6570\u70b9\u3092\u5207\u308a\u6368\u3066\u308b python print ( 5 // 2 ) 2 c++ #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: cout << 5 / 2 << std :: endl ; \u5270\u4f59(\u4f59\u308a)\u8a08\u7b97 \u00b6 >> 7 % 4 3","title":"\u56db\u5247\u6f14\u7b97"},{"location":"01_calcurate_entry/#_1","text":"","title":"\u56db\u5247\u6f14\u7b97"},{"location":"01_calcurate_entry/#addition","text":">> 3 + 2 5","title":"\u8db3\u3057\u7b97(addition)"},{"location":"01_calcurate_entry/#subtraction","text":">> 3 - 2 1","title":"\u5f15\u304d\u7b97(subtraction)"},{"location":"01_calcurate_entry/#multiplication","text":">> 3 * 2 6","title":"\u639b\u3051\u7b97(multiplication)"},{"location":"01_calcurate_entry/#division","text":"\u4ed6\u306e\u8a00\u8a9e\u3068\u7570\u306a\u308a\u3001python\u3067\u306f / \u3092\u4f7f\u7528\u3059\u308b\u5272\u308a\u7b97\u3067\u306f\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u307e\u3067\u8a08\u7b97\u3055\u308c\u308b \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3082\u542b\u3081\u3066\u8a08\u7b97\u3059\u308b\u5834\u5408\u306b\u306f // \u3092\u4f7f\u7528\u3059\u308b \u5c0f\u6570\u70b9\u3092\u5207\u308a\u6368\u3066\u305b\u305a\u306b\u8a08\u7b97\u3059\u308b python >> 5 / 2 2.5 c++ C++\u3067\u306f\u6574\u6570\u578b\u306e\u5272\u308a\u7b97\u3092\u3059\u308b\u3068\u3001\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306f\u5207\u308a\u6368\u3066\u3089\u308c\u308b\u305f\u3081\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306b\u5909\u63db\u3057\u3066\u8a08\u7b97\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: cout << static_cast < float > ( 5 ) / static_cast < float > ( 2 ) << std :: endl ; \u5c0f\u6570\u70b9\u3092\u5207\u308a\u6368\u3066\u308b python print ( 5 // 2 ) 2 c++ #include <iostream> //std\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306b\u5fc5\u8981 std :: cout << 5 / 2 << std :: endl ;","title":"\u5272\u308a\u7b97(division)"},{"location":"01_calcurate_entry/#_2","text":">> 7 % 4 3","title":"\u5270\u4f59(\u4f59\u308a)\u8a08\u7b97"},{"location":"02_calcurate_basic/","text":"\u56db\u5247\u6f14\u7b97(\u5c11\u3057\u767a\u5c55) \u00b6 \u7d2f\u4e57\u8a08\u7b97(Exponentiation) \u00b6 >> 2 ** 4 16","title":"\u56db\u5247\u6f14\u7b97(\u5c11\u3057\u767a\u5c55)"},{"location":"02_calcurate_basic/#_1","text":"","title":"\u56db\u5247\u6f14\u7b97(\u5c11\u3057\u767a\u5c55)"},{"location":"02_calcurate_basic/#exponentiation","text":">> 2 ** 4 16","title":"\u7d2f\u4e57\u8a08\u7b97(Exponentiation)"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/","text":"\u30ea\u30b9\u30c8(List) \u00b6 \u8907\u6570\u306e\u578b\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u308b \u5f8c\u304b\u3089\u30ea\u30b9\u30c8\u306e\u8ffd\u52a0\u30fb\u7f6e\u63db\u30fb\u524a\u9664\u304c\u53ef\u80fd [] \u3067\u5024\u3092\u5b9a\u7fa9\u3059\u308b \u5ba3\u8a00\uff06\u53c2\u7167\uff06\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u53d6\u5f97 \u00b6 \u7a7a\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408 \u00b6 python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [] # \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a $ print ( len ( myList )) 0 c++ C++\u3067\u306fvector\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u305f\u51e6\u7406\u304c\u4e00\u756a\u8fd1\u3044 std::vector<\u578b> \u5909\u6570\u540d \u3067\u5b9a\u7fa9\u3059\u308b \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u306fsize()\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ; \uff11\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408 \u00b6 python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee\u3092\u8868\u793a $ print ( myList [ 0 ]) 1 # \u30ea\u30b9\u30c8\u306e\uff13\u756a\u76ee\u3092\u8868\u793a $ print ( myList [ 3 ]) str # \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a $ print ( len ( myList )) 4 c++ vector\u5185\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u578b(int\u3068str\u578b\u306a\u3069)\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044 #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v = { 1 , 2 , 3 , 4 }; // \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee(1)\u3092\u8868\u793a std :: cout << v [ 0 ] << std :: endl ; // \u30ea\u30b9\u30c8\u306e\uff12\u756a\u76ee(3)\u3092\u8868\u793a std :: cout << v [ 2 ] << std :: endl ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ; \u591a\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408 \u00b6 python # \uff12\u6b21\u5143\u914d\u5217\u306e\u4f5c\u6210 $ myList = [ [ 1 , 2 , 3 ], [ 11 , 12 , 13 , 14 ] ] # \u51fa\u529b $ print ( myList ) [[ 1 , 2 , 3 ], [ 11 , 12 , 13 , 14 ]] # $ print ( myList [ 0 ][ 0 ]) 1 # $ print ( myList [ 1 ][ 2 ]) 13 # \uff11\u6b21\u5143\u76ee\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba([1,2,3]\u3068[11,12,13,14]\u306e\uff12\u30b0\u30eb\u30fc\u30d7\u3042\u308b\u3053\u3068)\u3092\u8868\u793a $ print ( len ( myList )) 2 # 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[1,2,3])\u3092\u8868\u793a $ print ( len ( myList [ 0 ])) 3 # 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[11,12,13,14])\u3092\u8868\u793a $ print ( len ( myList [ 1 ])) 4 c++ std::vector<std::vector<\u578b>> \u5909\u6570\u540d \u3067\u5b9a\u7fa9\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < std :: vector < int >> v = { { 1 , 2 , 3 },{ 11 , 12 , 13 , 13 }}; // \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee(1)\u3092\u8868\u793a std :: cout << v [ 0 ][ 0 ] << std :: endl ; // \u30ea\u30b9\u30c8\u306e\uff12\u756a\u76ee(3)\u3092\u8868\u793a std :: cout << v [ 1 ][ 2 ] << std :: endl ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ; // 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[1,2,3])\u3092\u8868\u793a std :: cout << v [ 0 ]. size () << std :: endl ; // 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[11,12,13,14])\u3092\u8868\u793a std :: cout << v [ 1 ]. size () << std :: endl ; \u8ffd\u52a0 \u00b6 \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 \u00b6 python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList . append ( 4 ) # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' , 4 ] c++ #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v = { 1 , 2 , 3 }; //\u672b\u5c3e\u306b\u8ffd\u52a0 v . push_back ( 4 ); \u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u633f\u5165\u3059\u308b \u00b6 insert(\u633f\u5165\u4f4d\u7f6e\u3001\u633f\u5165\u3059\u308b\u5024 or \u30ea\u30b9\u30c8) # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList . insert ( 1 , 123 ) # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 123 , 2 , 3 ] \u6700\u5f8c\u5c3e\u306b\u5225\u306e\u30ea\u30b9\u30c8\u3092\u8ffd\u52a0 \u00b6 # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList = myList + [ 4 , \"mozi\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' , 4 , 'mozi' ] \u7f6e\u63db \u00b6 \u7f6e\u63db\u3059\u308b\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u30ea\u30b9\u30c8\u3092\u5909\u66f4\u3059\u308b \u00b6 # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \uff11\u756a\u76ee\uff5e3\u756a\u76ee\u306e\u7bc4\u56f2(2,3)\u3092\u524a\u9664\u3057\u3066\u5dee\u3057\u66ff\u3048\u308b $ myList [ 1 : 3 ] = [ 100 , 200 , \"mozi\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a # (\u300c2,3\u300d\u304c\u300c100,200,\"mozi\"\u300d\u306b\u7f6e\u63db\u3055\u308c\u3066\u3044\u308b) $ print ( myList ) [[ 1 , 100 , 200 , 'mozi' , 'str' ] \u524a\u9664 \u00b6 \u5168\u8981\u7d20\u524a\u9664 \u00b6 # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u5168\u8981\u7d20\u3092\u524a\u9664 $ myList . clear () # \u524a\u9664\u5f8c $ print ( myList ) [] \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3067\u524a\u9664 \u00b6 # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ del myList [ 2 ] # \u524a\u9664\u5f8c $ print ( myList ) [ 1 , 3 , 'str' ] \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3067\u524a\u9664\u3057\u3001\u5024\u3092\u53d6\u5f97\u3059\u308b \u00b6 # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ data = myList . pop ( 1 ) # \u524a\u9664\u5f8c $ print ( myList ) [ 1 , 3 , 'str' ] $ print ( data ) 2 \u8981\u7d20(\u4e2d\u8eab\u30c7\u30fc\u30bf)\u6307\u5b9a\u3067\u524a\u9664 \u00b6 \u30ea\u30b9\u30c8\u5185\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u8907\u6570\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u5024\u304c\u524a\u9664\u3055\u308c\u308b # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 1 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 1 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ myList . remove ( 1 ) # \u524a\u9664\u5f8c $ print ( myList ) [ 2 , 1 , 'str' ]","title":"\u30ea\u30b9\u30c8(List)"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#list","text":"\u8907\u6570\u306e\u578b\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u308b \u5f8c\u304b\u3089\u30ea\u30b9\u30c8\u306e\u8ffd\u52a0\u30fb\u7f6e\u63db\u30fb\u524a\u9664\u304c\u53ef\u80fd [] \u3067\u5024\u3092\u5b9a\u7fa9\u3059\u308b","title":"\u30ea\u30b9\u30c8(List)"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_1","text":"","title":"\u5ba3\u8a00\uff06\u53c2\u7167\uff06\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u53d6\u5f97"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_2","text":"python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [] # \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a $ print ( len ( myList )) 0 c++ C++\u3067\u306fvector\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u305f\u51e6\u7406\u304c\u4e00\u756a\u8fd1\u3044 std::vector<\u578b> \u5909\u6570\u540d \u3067\u5b9a\u7fa9\u3059\u308b \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u306fsize()\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ;","title":"\u7a7a\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#1","text":"python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee\u3092\u8868\u793a $ print ( myList [ 0 ]) 1 # \u30ea\u30b9\u30c8\u306e\uff13\u756a\u76ee\u3092\u8868\u793a $ print ( myList [ 3 ]) str # \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a $ print ( len ( myList )) 4 c++ vector\u5185\u306b\u8907\u6570\u306e\u30c7\u30fc\u30bf\u578b(int\u3068str\u578b\u306a\u3069)\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044 #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v = { 1 , 2 , 3 , 4 }; // \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee(1)\u3092\u8868\u793a std :: cout << v [ 0 ] << std :: endl ; // \u30ea\u30b9\u30c8\u306e\uff12\u756a\u76ee(3)\u3092\u8868\u793a std :: cout << v [ 2 ] << std :: endl ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ;","title":"\uff11\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_3","text":"python # \uff12\u6b21\u5143\u914d\u5217\u306e\u4f5c\u6210 $ myList = [ [ 1 , 2 , 3 ], [ 11 , 12 , 13 , 14 ] ] # \u51fa\u529b $ print ( myList ) [[ 1 , 2 , 3 ], [ 11 , 12 , 13 , 14 ]] # $ print ( myList [ 0 ][ 0 ]) 1 # $ print ( myList [ 1 ][ 2 ]) 13 # \uff11\u6b21\u5143\u76ee\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba([1,2,3]\u3068[11,12,13,14]\u306e\uff12\u30b0\u30eb\u30fc\u30d7\u3042\u308b\u3053\u3068)\u3092\u8868\u793a $ print ( len ( myList )) 2 # 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[1,2,3])\u3092\u8868\u793a $ print ( len ( myList [ 0 ])) 3 # 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[11,12,13,14])\u3092\u8868\u793a $ print ( len ( myList [ 1 ])) 4 c++ std::vector<std::vector<\u578b>> \u5909\u6570\u540d \u3067\u5b9a\u7fa9\u3059\u308b #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < std :: vector < int >> v = { { 1 , 2 , 3 },{ 11 , 12 , 13 , 13 }}; // \u30ea\u30b9\u30c8\u306e\uff10\u756a\u76ee(1)\u3092\u8868\u793a std :: cout << v [ 0 ][ 0 ] << std :: endl ; // \u30ea\u30b9\u30c8\u306e\uff12\u756a\u76ee(3)\u3092\u8868\u793a std :: cout << v [ 1 ][ 2 ] << std :: endl ; // \u30ea\u30b9\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u793a std :: cout << v . size () << std :: endl ; // 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[1,2,3])\u3092\u8868\u793a std :: cout << v [ 0 ]. size () << std :: endl ; // 2\u6b21\u5143\u76ee\u306e0\u756a\u76ee[11,12,13,14])\u3092\u8868\u793a std :: cout << v [ 1 ]. size () << std :: endl ;","title":"\u591a\u6b21\u5143\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_4","text":"","title":"\u8ffd\u52a0"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_5","text":"python # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList . append ( 4 ) # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' , 4 ] c++ #include <iostream> //std\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 #include <vector> //vector\u30af\u30e9\u30b9\u306e\u4f7f\u7528\u3067\u5fc5\u8981 // vector\u4f5c\u6210 std :: vector < int > v = { 1 , 2 , 3 }; //\u672b\u5c3e\u306b\u8ffd\u52a0 v . push_back ( 4 );","title":"\u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_6","text":"insert(\u633f\u5165\u4f4d\u7f6e\u3001\u633f\u5165\u3059\u308b\u5024 or \u30ea\u30b9\u30c8) # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList . insert ( 1 , 123 ) # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 123 , 2 , 3 ]","title":"\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u633f\u5165\u3059\u308b"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_7","text":"# \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u6700\u5f8c\u5c3e\u306b\u8ffd\u52a0 $ myList = myList + [ 4 , \"mozi\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' , 4 , 'mozi' ]","title":"\u6700\u5f8c\u5c3e\u306b\u5225\u306e\u30ea\u30b9\u30c8\u3092\u8ffd\u52a0"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_8","text":"","title":"\u7f6e\u63db"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_9","text":"# \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \uff11\u756a\u76ee\uff5e3\u756a\u76ee\u306e\u7bc4\u56f2(2,3)\u3092\u524a\u9664\u3057\u3066\u5dee\u3057\u66ff\u3048\u308b $ myList [ 1 : 3 ] = [ 100 , 200 , \"mozi\" ] # \u30ea\u30b9\u30c8\u3092\u8868\u793a # (\u300c2,3\u300d\u304c\u300c100,200,\"mozi\"\u300d\u306b\u7f6e\u63db\u3055\u308c\u3066\u3044\u308b) $ print ( myList ) [[ 1 , 100 , 200 , 'mozi' , 'str' ]","title":"\u7f6e\u63db\u3059\u308b\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u30ea\u30b9\u30c8\u3092\u5909\u66f4\u3059\u308b"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_10","text":"","title":"\u524a\u9664"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_11","text":"# \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u5168\u8981\u7d20\u3092\u524a\u9664 $ myList . clear () # \u524a\u9664\u5f8c $ print ( myList ) []","title":"\u5168\u8981\u7d20\u524a\u9664"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_12","text":"# \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ del myList [ 2 ] # \u524a\u9664\u5f8c $ print ( myList ) [ 1 , 3 , 'str' ]","title":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3067\u524a\u9664"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_13","text":"# \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 3 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 3 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ data = myList . pop ( 1 ) # \u524a\u9664\u5f8c $ print ( myList ) [ 1 , 3 , 'str' ] $ print ( data ) 2","title":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u6307\u5b9a\u3067\u524a\u9664\u3057\u3001\u5024\u3092\u53d6\u5f97\u3059\u308b"},{"location":"03_%E3%83%AA%E3%82%B9%E3%83%88/#_14","text":"\u30ea\u30b9\u30c8\u5185\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u8907\u6570\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u5024\u304c\u524a\u9664\u3055\u308c\u308b # \u30ea\u30b9\u30c8\u4f5c\u6210 $ myList = [ 1 , 2 , 1 , \"str\" ] # \u524a\u9664\u524d $ print ( myList ) [ 1 , 2 , 1 , 'str' ] # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff11\u306e\u8981\u7d20\u3092\u524a\u9664 $ myList . remove ( 1 ) # \u524a\u9664\u5f8c $ print ( myList ) [ 2 , 1 , 'str' ]","title":"\u8981\u7d20(\u4e2d\u8eab\u30c7\u30fc\u30bf)\u6307\u5b9a\u3067\u524a\u9664"},{"location":"04_%E8%BE%9E%E6%9B%B8/","text":"\u8f9e\u66f8(Dictionary) \u00b6 Key \u3068 Value \u3067\uff11\u5bfe\uff11\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b { Key : Value } \u306e\u5f62\u3067\u5ba3\u8a00\u3059\u308b \u30ea\u30b9\u30c8\u3068\u7570\u306a\u308a\u3001 [ ] \u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f \u5909\u6570\u540d[Key \u5024] \u3067 Value \u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b \u5ba3\u8a00 \u00b6 $ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } \u8868\u793a \u00b6 $ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict ) { 'apple' : 100 , 'orange' : 200 , 0 : 'xxx' } Key \u4e00\u89a7\u3092\u8868\u793a \u00b6 $ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict . keys ()) dict_keys ([ 'apple' , 'orange' , 0 ]) Value \u4e00\u89a7\u3092\u8868\u793a \u00b6 $ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict . values ()) dict_values ([ 100 , 200 , 'xxx' ]) KEY \u5024(\"apple\") \u306b\u5bfe\u5fdc\u3059\u308b value \u3092\u8868\u793a \u00b6 $ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict [ \"apple\" ])) dict_values ([ 100 , 200 , 'xxx' ])","title":"\u8f9e\u66f8(Dictionary)"},{"location":"04_%E8%BE%9E%E6%9B%B8/#dictionary","text":"Key \u3068 Value \u3067\uff11\u5bfe\uff11\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b { Key : Value } \u306e\u5f62\u3067\u5ba3\u8a00\u3059\u308b \u30ea\u30b9\u30c8\u3068\u7570\u306a\u308a\u3001 [ ] \u3067\u306f\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f \u5909\u6570\u540d[Key \u5024] \u3067 Value \u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b","title":"\u8f9e\u66f8(Dictionary)"},{"location":"04_%E8%BE%9E%E6%9B%B8/#_1","text":"$ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" }","title":"\u5ba3\u8a00"},{"location":"04_%E8%BE%9E%E6%9B%B8/#_2","text":"$ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict ) { 'apple' : 100 , 'orange' : 200 , 0 : 'xxx' }","title":"\u8868\u793a"},{"location":"04_%E8%BE%9E%E6%9B%B8/#key","text":"$ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict . keys ()) dict_keys ([ 'apple' , 'orange' , 0 ])","title":"Key \u4e00\u89a7\u3092\u8868\u793a"},{"location":"04_%E8%BE%9E%E6%9B%B8/#value","text":"$ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict . values ()) dict_values ([ 100 , 200 , 'xxx' ])","title":"Value \u4e00\u89a7\u3092\u8868\u793a"},{"location":"04_%E8%BE%9E%E6%9B%B8/#key-apple-value","text":"$ dict = { \"apple\" : 100 , \"orange\" : 200 , 0 : \"xxx\" } $ print ( dict [ \"apple\" ])) dict_values ([ 100 , 200 , 'xxx' ])","title":"KEY \u5024(\"apple\") \u306b\u5bfe\u5fdc\u3059\u308b value \u3092\u8868\u793a"},{"location":"05_%E3%82%BF%E3%83%97%E3%83%AB/","text":"\u30bf\u30d7\u30eb(Tuples) \u00b6 \u5909\u66f4\u304c\u51fa\u6765\u306a\u3044\u30ea\u30b9\u30c8(C \u8a00\u8a9e\u306e const \u76f8\u5f53\u306e\u3082\u306e)","title":"\u30bf\u30d7\u30eb(Tuples)"},{"location":"05_%E3%82%BF%E3%83%97%E3%83%AB/#tuples","text":"\u5909\u66f4\u304c\u51fa\u6765\u306a\u3044\u30ea\u30b9\u30c8(C \u8a00\u8a9e\u306e const \u76f8\u5f53\u306e\u3082\u306e)","title":"\u30bf\u30d7\u30eb(Tuples)"},{"location":"06_%E5%9E%8B%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88/","text":"\u578b\u30ad\u30e3\u30b9\u30c8 \u00b6 \u57fa\u672c \u00b6 int \u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u304c \u5207\u308a\u6368\u3066\u3089\u308c\u308b bool \u578b\u306f\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u5909\u63db\u3055\u308c\u308b 0 \u306f false 0 \u4ee5\u5916\u306f true $ print ( int ( 2.5 )) 2 $ print ( float ( \"4.56\" )) 4.56 $ print ( str ( 123 )) 123 # book\u578b\u306e\u30ad\u30e3\u30b9\u30c8 $ print ( bool ( 0 )) False $ print ( bool ( 1 )) True $ print ( bool ( 2 )) True $ print ( bool ( \"0\" )) True $ print ( bool ( \"str\" )) True","title":"\u578b\u30ad\u30e3\u30b9\u30c8"},{"location":"06_%E5%9E%8B%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88/#_1","text":"","title":"\u578b\u30ad\u30e3\u30b9\u30c8"},{"location":"06_%E5%9E%8B%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88/#_2","text":"int \u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u304c \u5207\u308a\u6368\u3066\u3089\u308c\u308b bool \u578b\u306f\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u5909\u63db\u3055\u308c\u308b 0 \u306f false 0 \u4ee5\u5916\u306f true $ print ( int ( 2.5 )) 2 $ print ( float ( \"4.56\" )) 4.56 $ print ( str ( 123 )) 123 # book\u578b\u306e\u30ad\u30e3\u30b9\u30c8 $ print ( bool ( 0 )) False $ print ( bool ( 1 )) True $ print ( bool ( 2 )) True $ print ( bool ( \"0\" )) True $ print ( bool ( \"str\" )) True","title":"\u57fa\u672c"},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/","text":"\u6761\u4ef6\u5f0f \u00b6 \u6587\u5b57\u5217\u3082\u6570\u5024\u3082\u7c21\u5358\u306b\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b \u7279\u306b\u4ed6\u306e\u8a00\u8a9e\u3068\u7570\u306a\u308a\u3001 in \u6f14\u7b97\u5b50\u304c\u4fbf\u5229 \u00b6 \u8a18\u53f7 \u610f\u5473 == \u7b49\u3057\u3044\u5834\u5408 != \u7b49\u3057\u304f\u306a\u3044\u5834\u5408 in \u542b\u3080\u5834\u5408 is id \u304c\u4e00\u7dd2\u304b is not id \u304c\u4e00\u7dd2\u304b < <= > >= \u7b49\u3057\u3044(==) \u00b6 # \u6210\u529f\u30b1\u30fc\u30b9 print ( 1 == 1 ) True print ( \"str\" == \"str\" ) True # \u5931\u6557\u30b1\u30fc\u30b9 $ print ( 1 == 2 ) False $ print ( \"str\" == \"star\" ) False \u7b49\u3057\u304f\u306a\u3044(!=) \u00b6 # \u771f(True)\u3068\u306a\u308b\u30b1\u30fc\u30b9 $ print ( 1 != 2 ) True $ print ( \"str\" != \"stra\" ) True # \u5100(False)\u3068\u306a\u308b\u30b1\u30fc\u30b9 $ print ( 1 != 1 ) False $ print ( \"str\" != \"str\" ) False \u542b\u3080(in) \u00b6 # \u771f(True)\u3068\u306a\u308b\u30b1\u30fc\u30b9 # \u6587\u5b57\u5217\u306e\u5834\u5408 $ print ( \"bb\" in \"aabbcc\" ) True # \u30ea\u30b9\u30c8\u306e\u5834\u5408 $ print ( \"bb\" in [ \"aa\" , \"bb\" , \"cc\" , \"dd\" ]) True # \u30bf\u30d7\u30eb\u306e\u5834\u5408 $ print ( \"cc\" in ( \"aa\" , \"bb\" , \"cc\" , \"dd\" )) True # \u8f9e\u66f8\u306e\u5834\u5408(Key\u304c\u3042\u308c\u3070\u30d2\u30c3\u30c8\u3059\u308b) $ print ( \"cc\" in { \"aa\" : 0 , \"bb\" : 1 , \"cc\" : 2 , \"dd\" : 3 }) True # \u5100(False)\u3068\u306a\u308b\u30b1\u30fc\u30b9 # \u6587\u5b57\u5217\u306e\u5834\u5408 $ print ( \"dd\" in \"aabbcc\" ) False # \u30ea\u30b9\u30c8\u306e\u5834\u5408 $ print ( \"ee\" in [ \"aa\" , \"bb\" , \"cc\" , \"dd\" ]) False # \u30bf\u30d7\u30eb\u306e\u5834\u5408 $ print ( \"ee\" in ( \"aa\" , \"bb\" , \"cc\" , \"dd\" )) False # \u8f9e\u66f8\u306e\u5834\u5408(Key\u304c\u3042\u308c\u3070\u30d2\u30c3\u30c8\u3059\u308b) $ print ( \"ee\" in { \"aa\" : 0 , \"bb\" : 1 , \"cc\" : 2 , \"dd\" : 3 }) False","title":"\u6761\u4ef6\u5f0f"},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/#_1","text":"\u6587\u5b57\u5217\u3082\u6570\u5024\u3082\u7c21\u5358\u306b\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b \u7279\u306b\u4ed6\u306e\u8a00\u8a9e\u3068\u7570\u306a\u308a\u3001 in \u6f14\u7b97\u5b50\u304c\u4fbf\u5229","title":"\u6761\u4ef6\u5f0f"},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/#_2","text":"\u8a18\u53f7 \u610f\u5473 == \u7b49\u3057\u3044\u5834\u5408 != \u7b49\u3057\u304f\u306a\u3044\u5834\u5408 in \u542b\u3080\u5834\u5408 is id \u304c\u4e00\u7dd2\u304b is not id \u304c\u4e00\u7dd2\u304b < <= > >=","title":""},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/#_3","text":"# \u6210\u529f\u30b1\u30fc\u30b9 print ( 1 == 1 ) True print ( \"str\" == \"str\" ) True # \u5931\u6557\u30b1\u30fc\u30b9 $ print ( 1 == 2 ) False $ print ( \"str\" == \"star\" ) False","title":"\u7b49\u3057\u3044(==)"},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/#_4","text":"# \u771f(True)\u3068\u306a\u308b\u30b1\u30fc\u30b9 $ print ( 1 != 2 ) True $ print ( \"str\" != \"stra\" ) True # \u5100(False)\u3068\u306a\u308b\u30b1\u30fc\u30b9 $ print ( 1 != 1 ) False $ print ( \"str\" != \"str\" ) False","title":"\u7b49\u3057\u304f\u306a\u3044(!=)"},{"location":"11_%E6%9D%A1%E4%BB%B6%E5%BC%8F/#in","text":"# \u771f(True)\u3068\u306a\u308b\u30b1\u30fc\u30b9 # \u6587\u5b57\u5217\u306e\u5834\u5408 $ print ( \"bb\" in \"aabbcc\" ) True # \u30ea\u30b9\u30c8\u306e\u5834\u5408 $ print ( \"bb\" in [ \"aa\" , \"bb\" , \"cc\" , \"dd\" ]) True # \u30bf\u30d7\u30eb\u306e\u5834\u5408 $ print ( \"cc\" in ( \"aa\" , \"bb\" , \"cc\" , \"dd\" )) True # \u8f9e\u66f8\u306e\u5834\u5408(Key\u304c\u3042\u308c\u3070\u30d2\u30c3\u30c8\u3059\u308b) $ print ( \"cc\" in { \"aa\" : 0 , \"bb\" : 1 , \"cc\" : 2 , \"dd\" : 3 }) True # \u5100(False)\u3068\u306a\u308b\u30b1\u30fc\u30b9 # \u6587\u5b57\u5217\u306e\u5834\u5408 $ print ( \"dd\" in \"aabbcc\" ) False # \u30ea\u30b9\u30c8\u306e\u5834\u5408 $ print ( \"ee\" in [ \"aa\" , \"bb\" , \"cc\" , \"dd\" ]) False # \u30bf\u30d7\u30eb\u306e\u5834\u5408 $ print ( \"ee\" in ( \"aa\" , \"bb\" , \"cc\" , \"dd\" )) False # \u8f9e\u66f8\u306e\u5834\u5408(Key\u304c\u3042\u308c\u3070\u30d2\u30c3\u30c8\u3059\u308b) $ print ( \"ee\" in { \"aa\" : 0 , \"bb\" : 1 , \"cc\" : 2 , \"dd\" : 3 }) False","title":"\u542b\u3080(in)"},{"location":"12_IF%E6%96%87/","text":"if\u6587 \u00b6 xxxx ( ) \u306f\u3044\u3089\u306a\u3044 \u6761\u4ef6\u5f0f\u306e\u6700\u5f8c\u306b : \u304c\u5fc5\u8981 C\u8a00\u8a9e\u3082\u7570\u306a\u308a\u3001 else if \u3067\u306f\u306a\u304f\u3001 elif \u3068\u66f8\u304f \u57fa\u672c\u69cb\u6587 \u00b6 if \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : if \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : # \u305d\u308c\u4ee5\u5916\u306e\u30eb\u30fc\u30c8 if \u6761\u4ef6\u5f0f : elif \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : xxx yyy python aaa ```c++ python | c++ python | c++ python | c++ [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"]","title":"if\u6587"},{"location":"12_IF%E6%96%87/#if","text":"xxxx ( ) \u306f\u3044\u3089\u306a\u3044 \u6761\u4ef6\u5f0f\u306e\u6700\u5f8c\u306b : \u304c\u5fc5\u8981 C\u8a00\u8a9e\u3082\u7570\u306a\u308a\u3001 else if \u3067\u306f\u306a\u304f\u3001 elif \u3068\u66f8\u304f","title":"if\u6587"},{"location":"12_IF%E6%96%87/#_1","text":"if \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : if \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : # \u305d\u308c\u4ee5\u5916\u306e\u30eb\u30fc\u30c8 if \u6761\u4ef6\u5f0f : elif \u6761\u4ef6\u5f0f : # \u771f\u306e\u5834\u5408\u306e\u30eb\u30fc\u30c8 else : xxx yyy python aaa ```c++ python | c++ python | c++ python | c++ [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"]","title":"\u57fa\u672c\u69cb\u6587"},{"location":"13_for%E6%96%87/","text":"\u7e70\u308a\u8fd4\u3057(for\u6587) \u00b6 \u00b6 for \u5909\u6570 in \u30ea\u30b9\u30c8 : \u51e6\u7406 0\u304b\u30894\u307e\u3067\u3092\u7e70\u308a\u8fd4\u3059\u5834\u5408 \u00b6 python \u51e6\u7406 >>> for i in ( 0 , 1 , 2 , 3 , 4 ): ... print ( i ) ... 0 1 2 3 4 or >>> for i in range ( 5 ): ... print ( i ) ... 0 1 2 3 4 or >>> for i in range ( 0 , 5 ): ... print ( i ) ... 0 1 2 3 4 (\u53c2\u8003) C\u8a00\u8a9e\u306e\u5834\u5408 for ( unsigned int i = 0 ; i < 5 ; i ++ ){ std :: cout << i << std :: endl ; } \u30ea\u30b9\u30c8(a,b,c,d)\u3092\u30eb\u30fc\u30d7\u3059\u308b\u5834\u5408 \u00b6 python \u51e6\u7406 >>>> myList = [ \"a\" , \"b\" , \"c\" , \"d\" ] >>> for str in myList : ... print ( str ) ... a b c d or >>> myList = [ \"a\" , \"b\" , \"c\" , \"d\" ] >>> for i , str in enumerate ( myList ): ... print ( \" {num} => {mozi} \" . format ( num = i , mozi = str )) ... 0 => a 1 => b 2 => c 3 => d (\u53c2\u8003) C\u8a00\u8a9e\u306e\u5834\u5408 for ( unsigned int i = 0 ; i < 5 ; i ++ ){ std :: cout << i << std :: endl ; }","title":"\u7e70\u308a\u8fd4\u3057(for\u6587)"},{"location":"13_for%E6%96%87/#for","text":"","title":"\u7e70\u308a\u8fd4\u3057(for\u6587)"},{"location":"13_for%E6%96%87/#_1","text":"for \u5909\u6570 in \u30ea\u30b9\u30c8 : \u51e6\u7406","title":""},{"location":"13_for%E6%96%87/#04","text":"python \u51e6\u7406 >>> for i in ( 0 , 1 , 2 , 3 , 4 ): ... print ( i ) ... 0 1 2 3 4 or >>> for i in range ( 5 ): ... print ( i ) ... 0 1 2 3 4 or >>> for i in range ( 0 , 5 ): ... print ( i ) ... 0 1 2 3 4 (\u53c2\u8003) C\u8a00\u8a9e\u306e\u5834\u5408 for ( unsigned int i = 0 ; i < 5 ; i ++ ){ std :: cout << i << std :: endl ; }","title":"0\u304b\u30894\u307e\u3067\u3092\u7e70\u308a\u8fd4\u3059\u5834\u5408"},{"location":"13_for%E6%96%87/#abcd","text":"python \u51e6\u7406 >>>> myList = [ \"a\" , \"b\" , \"c\" , \"d\" ] >>> for str in myList : ... print ( str ) ... a b c d or >>> myList = [ \"a\" , \"b\" , \"c\" , \"d\" ] >>> for i , str in enumerate ( myList ): ... print ( \" {num} => {mozi} \" . format ( num = i , mozi = str )) ... 0 => a 1 => b 2 => c 3 => d (\u53c2\u8003) C\u8a00\u8a9e\u306e\u5834\u5408 for ( unsigned int i = 0 ; i < 5 ; i ++ ){ std :: cout << i << std :: endl ; }","title":"\u30ea\u30b9\u30c8(a,b,c,d)\u3092\u30eb\u30fc\u30d7\u3059\u308b\u5834\u5408"}]}